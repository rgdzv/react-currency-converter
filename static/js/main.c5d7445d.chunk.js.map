{"version":3,"sources":["components/Card/Card.tsx","components/Footer/Footer.tsx","components/Header/Header.tsx","images/preloader.gif","App.tsx","index.tsx"],"names":["Card","defaultCountry","changeSelectValue","amount","changeInput","сurrencyShortName","currencySymbol","countries","countryFlag","currencyFullName","currencyFooterName","footerCurrencyRate","finalOption","map","country","value","name","common","length","slice","className","onChange","src","alt","type","min","Footer","href","memo","Header","children","Date","toLocaleDateString","App","fromAmount","toAmount","useState","setCountries","fromCountryOption","setFromCountryOption","toCountryOption","setToCountryOption","fromCurrencyShortName","setFromCurrencyShortName","toCurrencyShortName","setToCurrencyShortName","fromCurrencySymbol","setFromCurrencySymbol","toCurrencySymbol","setToCurrencySymbol","fromCountryFlag","setFromCountryFlag","toCountryFlag","setToCountryFlag","fromCurrencyFullName","setFromCurrencyFullName","toCurrencyFullName","setToCurrencyFullName","fromFooterCurrencyRate","setFromFooterCurrencyRate","toFooterCurrencyRate","setToFooterCurrencyRate","setAmount","amountInFromCurrency","setAmountInFromCurrency","exchangeRate","setExchangeRate","loading","setLoading","error","setError","parseFloat","toFixed","fetchData","a","axios","get","currenciesResponse","data","currenciesData","countriesResponse","countriesData","baseCurrencyResponse","rates","baseCurrencyResponceData","filteredBaseCurrency","Object","keys","countriesWithCurrency","filter","item","currencies","filteredCountriesData","key","sortedCountriesData","sort","b","firstDefaultCurrencyKey","secondDefaultCurrencyKey","symbol","flags","svg","message","fetchConvertedCurrencies","convertedCurrenciesResponse","convertedCurrenciesResponseData","useEffect","style","paddingTop","minHeight","justify","maxWidth","preloader","e","target","forEach","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c5d7445d.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Card.scss'\r\nimport { Countries } from './../../helper/interfaces'\r\n\r\ninterface CardProps {\r\n  defaultCountry: string,\r\n  changeSelectValue: (e: React.ChangeEvent<HTMLSelectElement>) => void,\r\n  amount: number,\r\n  changeInput: (e: React.ChangeEvent<HTMLInputElement>) => void,\r\n  сurrencyShortName: string,\r\n  currencySymbol: string,\r\n  countries: Countries[],\r\n  countryFlag: string,\r\n  currencyFullName: string,\r\n  currencyFooterName: string,\r\n  footerCurrencyRate: number\r\n}\r\n\r\nconst Card: React.FC<CardProps> = ({ \r\n  defaultCountry, \r\n  changeSelectValue, \r\n  amount, \r\n  changeInput, \r\n  сurrencyShortName, \r\n  currencySymbol, \r\n  countries, \r\n  countryFlag, \r\n  currencyFullName,\r\n  currencyFooterName, \r\n  footerCurrencyRate \r\n}) => {\r\n  const finalOption = countries && countries.map((country) => (\r\n    <option \r\n      key={country.name.common} \r\n      value={country.name.common}\r\n    >\r\n      {country.name.common.length > 25 \r\n        ? \r\n          country.name.common.slice(0,30) + '...' \r\n        : \r\n          country.name.common\r\n      }\r\n    </option> \r\n  ))\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"currency__country\">\r\n        <select value={defaultCountry} onChange={changeSelectValue}>\r\n          {finalOption}\r\n        </select>\r\n      </div>\r\n      <div className=\"currency__content\">\r\n        <div className=\"currency__content__symbol\">\r\n          <p>{currencySymbol} {сurrencyShortName}</p>\r\n          <img src={countryFlag} alt={countryFlag}/>\r\n        </div>\r\n        <input \r\n          type=\"number\" \r\n          value={amount ? amount : ''} \r\n          onChange={changeInput} \r\n          min=\"0\"\r\n        />\r\n      </div>\r\n      <div className=\"currency__board\">\r\n        <div className=\"currency__board__name\">{currencyFullName}</div>\r\n        <div className=\"currency__board__value\">{`1 ${сurrencyShortName} = ${footerCurrencyRate} ${currencyFooterName}`}</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Card\r\n","import React, { memo } from 'react'\r\nimport './Footer.scss'\r\n\r\nconst Footer: React.FC = () => {\r\n  return (\r\n    <div className=\"footer\">\r\n      <hr/>\r\n      <p>\r\n        Currency converter is an app for showing relevant currency rates from <a href=\"https://www.frankfurter.app\">Frankfurter API</a><br/>This project was created by <a href=\"https://github.com/rgdzv\">Ramis Gadzhiomarov</a><br/> You can find code source <a href=\"https://github.com/rgdzv/react-currency-converter\">here</a> \r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default memo(Footer)\r\n","import React, { memo } from 'react'\r\nimport './Header.scss'\r\n\r\ninterface HeaderProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst Header: React.FC<HeaderProps> = ({ children }) => {\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"header__name\">{children}</div>\r\n      <div className=\"header__date\">{new Date().toLocaleDateString()}</div>\r\n    </div> \r\n  )\r\n}\r\n\r\nexport default memo(Header)\r\n","export default __webpack_public_path__ + \"static/media/preloader.20cbc66a.gif\";","import './App.scss'\r\nimport axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Col, Container, Row } from 'react-grid-system'\r\nimport Card from './components/Card/Card'\r\nimport Footer from './components/Footer/Footer'\r\nimport Header from './components/Header/Header'\r\nimport { Countries } from './helper/interfaces'\r\nimport preloader from './images/preloader.gif'\r\n\r\nconst App: React.FC = () => {\r\n  \r\n  const [countries, setCountries] = useState<Countries[]>([])\r\n\r\n  const [fromCountryOption, setFromCountryOption] = useState('')\r\n  const [toCountryOption, setToCountryOption] = useState('')\r\n\r\n  const [fromCurrencyShortName, setFromCurrencyShortName] = useState('')\r\n  const [toCurrencyShortName, setToCurrencyShortName] = useState('')\r\n\r\n  const [fromCurrencySymbol, setFromCurrencySymbol] = useState('')\r\n  const [toCurrencySymbol, setToCurrencySymbol] = useState('')\r\n\r\n  const [fromCountryFlag, setFromCountryFlag] = useState('')\r\n  const [toCountryFlag, setToCountryFlag] = useState('')\r\n\r\n  const [fromCurrencyFullName, setFromCurrencyFullName] = useState('')\r\n  const [toCurrencyFullName, setToCurrencyFullName] = useState('')\r\n\r\n  const [fromFooterCurrencyRate, setFromFooterCurrencyRate] = useState(0)\r\n  const [toFooterCurrencyRate, setToFooterCurrencyRate] = useState(0)\r\n\r\n  const [amount, setAmount] = useState(1)\r\n  const [amountInFromCurrency, setAmountInFromCurrency] = useState(true)\r\n  const [exchangeRate, setExchangeRate] = useState(0)\r\n\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState('')\r\n\r\n  let fromAmount, toAmount\r\n  if (amountInFromCurrency) {\r\n    fromAmount = amount\r\n    toAmount = parseFloat((amount * exchangeRate).toFixed(2))\r\n  } else {\r\n    toAmount = amount\r\n    fromAmount = parseFloat((amount / exchangeRate).toFixed(2))\r\n  }\r\n\r\n  const handleSetFromCurrency = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n    setFromCountryOption(e.target.value)\r\n    const countriesCopy = countries.slice(0)\r\n    countriesCopy.forEach(country => {\r\n      if (e.target.value === country.name.common){\r\n        const key = Object.keys(country.currencies)[0]\r\n        setFromCurrencyShortName(key)\r\n        setFromCurrencySymbol(country.currencies[key].symbol)\r\n        setFromCountryFlag(country.flags.svg)\r\n        setFromCurrencyFullName(country.currencies[key].name)\r\n      }\r\n    })\r\n    setError('')\r\n  }\r\n\r\n  const handleSetToCurrency = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n    setToCountryOption(e.target.value)\r\n    const countriesCopy = countries.slice(0)\r\n    countriesCopy.forEach(country => {\r\n      if (e.target.value === country.name.common){\r\n        const key = Object.keys(country.currencies)[0]\r\n        setToCurrencyShortName(key)\r\n        setToCurrencySymbol(country.currencies[key].symbol)\r\n        setToCountryFlag(country.flags.svg)\r\n        setToCurrencyFullName(country.currencies[key].name)\r\n      }\r\n    })\r\n    setError('')\r\n  }\r\n\r\n  const handleFromAmountChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setAmount(parseFloat(e.target.value))\r\n    setAmountInFromCurrency(true)\r\n  }\r\n\r\n  const handleToAmountChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setAmount(parseFloat(e.target.value))\r\n    setAmountInFromCurrency(false)\r\n  }\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const currenciesResponse = await axios.get('https://api.frankfurter.app/currencies')\r\n      const currenciesData = await currenciesResponse.data\r\n      const countriesResponse = await axios.get('https://restcountries.com/v3.1/all')\r\n      const countriesData: Countries[] = await countriesResponse.data\r\n\r\n      const baseCurrencyResponse = await axios.get(`https://api.frankfurter.app/latest?from=USD`)\r\n      const baseCurrencyResponceData = await baseCurrencyResponse.data.rates\r\n      const filteredBaseCurrency = Object.keys(baseCurrencyResponceData)[26]\r\n\r\n      const countriesWithCurrency = countriesData.filter(item => item.currencies)\r\n      const filteredCountriesData = countriesWithCurrency.filter(country => {\r\n        const key = Object.keys(country.currencies)[0]\r\n        return currenciesData[key]\r\n      })\r\n      const sortedCountriesData = filteredCountriesData.sort((a, b) => a.name.common > b.name.common ? 1 : a.name.common < b.name.common ? -1 : 0)\r\n\r\n      setCountries(sortedCountriesData)\r\n\r\n      const firstDefaultCurrencyKey = Object.keys(sortedCountriesData[95].currencies)[0]\r\n      const secondDefaultCurrencyKey = Object.keys(sortedCountriesData[72].currencies)[0]\r\n\r\n      setFromCountryOption(sortedCountriesData[95].name.common)\r\n      setFromCurrencySymbol(sortedCountriesData[95].currencies[firstDefaultCurrencyKey].symbol)\r\n      setFromCurrencyShortName(firstDefaultCurrencyKey)\r\n      setFromCountryFlag(sortedCountriesData[95].flags.svg)\r\n      setFromCurrencyFullName(sortedCountriesData[95].currencies[firstDefaultCurrencyKey].name)\r\n\r\n      setToCountryOption(sortedCountriesData[72].name.common)\r\n      setToCurrencySymbol(sortedCountriesData[72].currencies[secondDefaultCurrencyKey].symbol)\r\n      setToCurrencyShortName(secondDefaultCurrencyKey)\r\n      setToCountryFlag(sortedCountriesData[72].flags.svg)\r\n      setToCurrencyFullName(sortedCountriesData[72].currencies[secondDefaultCurrencyKey].name)\r\n      setExchangeRate(baseCurrencyResponceData[filteredBaseCurrency])\r\n      setLoading(false)\r\n    } catch (err: any) {\r\n      setError(err.message)\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const fetchConvertedCurrencies = async () => {\r\n    try {\r\n      if (fromCurrencyShortName && toCurrencyShortName) {\r\n        const convertedCurrenciesResponse = await axios.get(`https://api.frankfurter.app/latest?&amount=1&from=${fromCurrencyShortName}&to=${toCurrencyShortName}`)\r\n        const convertedCurrenciesResponseData = await convertedCurrenciesResponse.data.rates\r\n        setFromFooterCurrencyRate(convertedCurrenciesResponseData[toCurrencyShortName].toFixed(2))\r\n        setToFooterCurrencyRate(parseFloat((1 / convertedCurrenciesResponseData[toCurrencyShortName]).toFixed(2)))\r\n        setExchangeRate(convertedCurrenciesResponseData[toCurrencyShortName])\r\n      }\r\n    } catch(err: any) {\r\n      setError('Please, convert different currencies!')\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchData()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    fetchConvertedCurrencies()\r\n  }, [fromCurrencyShortName, toCurrencyShortName])\r\n\r\n  return (\r\n    <Container style={{ paddingTop: '20px', minHeight: '100vh'}}>\r\n      <Row>\r\n        <Col>\r\n          <Header>\r\n            Currency converter\r\n          </Header>\r\n        </Col>\r\n      </Row> \r\n      <Row justify='center'>\r\n        <Col style={{maxWidth: '350px'}}>\r\n          {loading \r\n            ?\r\n              <div className=\"loading\">\r\n                <img src={preloader} alt={preloader}/>\r\n              </div>\r\n            :\r\n              <>\r\n                <Card \r\n                  defaultCountry={fromCountryOption}\r\n                  changeSelectValue={handleSetFromCurrency}\r\n                  amount={fromAmount}\r\n                  changeInput={handleFromAmountChange}\r\n                  сurrencyShortName={fromCurrencyShortName}\r\n                  currencySymbol={fromCurrencySymbol}\r\n                  countryFlag={fromCountryFlag}\r\n                  currencyFullName={fromCurrencyFullName}\r\n                  countries={countries}\r\n                  currencyFooterName={toCurrencyShortName}\r\n                  footerCurrencyRate={fromFooterCurrencyRate}\r\n                />\r\n                <Card \r\n                  defaultCountry={toCountryOption}\r\n                  changeSelectValue={handleSetToCurrency}\r\n                  amount={toAmount}\r\n                  changeInput={handleToAmountChange}\r\n                  сurrencyShortName={toCurrencyShortName}\r\n                  currencySymbol={toCurrencySymbol}\r\n                  countryFlag={toCountryFlag}\r\n                  currencyFullName={toCurrencyFullName}\r\n                  countries={countries}\r\n                  currencyFooterName={fromCurrencyShortName}\r\n                  footerCurrencyRate={toFooterCurrencyRate}\r\n                />\r\n              </>\r\n          }\r\n          {error &&\r\n            <div className=\"error\">{error}</div>\r\n          }\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <Footer/>\r\n        </Col>\r\n      </Row>   \r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.scss'\r\nimport App from './App'\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}